import os
import sqlite3

from telebot import types, TeleBot
from google.cloud import dialogflow

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = r'C:\Users\dasha\small-talk-pwvh-41523ba9f162.json'

bot = TeleBot("7036415516:AAGxHelplPpo5SZB0N3dWMjg1YO366-UYJg")

users = {}


def connect_from_database(query):
    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()
    cur.execute(query)
    conn.commit()
    cur.close()
    conn.close()


def create_data_base():
    """–°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""

    # TODO: –î–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

    connect_from_database("CREATE TABLE IF NOT EXISTS users ("
                          "id INTEGER PRIMARY KEY AUTOINCREMENT, "
                          "chat_id VARCHAR(256),"
                          "name VARCHAR(256),"
                          "surname VARCHAR(256),"
                          "job VARCHAR(256)"
                          ");")


def create_user(chat_id):
    connect_from_database(f"INSERT INTO users (chat_id, name, surname, job) "
                          f"VALUES ({chat_id}, "
                          f"'{users[chat_id]['name']}', "
                          f"'{users[chat_id]['surname']}', "
                          f"'{users[chat_id]['job']}');")


def get_markup_from_button():
    """–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ—á–µ–∫"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn_registration = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    markup.add(btn_registration)
    return markup


@bot.message_handler(commands=['start', 'help'])
def handle_start(message):
    bot.send_message(message.chat.id,
                     "–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –≤ IT? \n –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à—É –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É CODE "
                     "BRAIN, –≥–¥–µ –º—ã –æ—Ç–∫—Ä–æ–µ–º –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –º–∏—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ "
                     "—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π!\n –ù–∞—à–∏ –∫—É—Ä—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏, —á—Ç–æ–±—ã –≤—ã –ø–æ–ª—É—á–∏–ª–∏ "
                     "—Ç–æ–ª—å–∫–æ —Ü–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏. üöÄ \n –° –Ω–∞–º–∏ –≤—ã –æ—Å–≤–æ–∏—Ç–µ –∫–∞–∂–¥—ã–π –∞—Å–ø–µ–∫—Ç —Å–æ–∑–¥–∞–Ω–∏—è "
                     "–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è - –æ—Ç –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –¥–æ "
                     "–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.\n –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, "
                     "–∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –∫—Ä–ø—É–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö!  –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º –≤–∞—à–∏ IT-–º–µ—á—Ç—ã "
                     "—Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é! üíª\n –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ‚Äú–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É‚Äù".
                     format(message.from_user), reply_markup=get_markup_from_button())


@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É":
        register(message)
    else:
        ai_text = little_ai_for_work(message=message.text)
        bot.send_message(message.chat.id, ai_text if ai_text else "–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è, –Ω–∞–ø–∏—à–∏ /help")


def register(message):
    bot.send_message(message.chat.id, "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è,\n –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    bot.register_next_step_handler(message, get_name)


def get_name(message):
    name = message.text
    users[message.chat.id] = {"name": name}
    bot.send_message(message.chat.id,
                     f"–î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ, {users[message.chat.id]['name']} \n –¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è?")
    bot.register_next_step_handler(message, get_surname)


def get_surname(message):
    surname = message.text
    users[message.chat.id]["surname"] = surname
    bot.send_message(message.chat.id, "–ì–¥–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å/—É—á–∏—à—å—Å—è?)")
    bot.register_next_step_handler(message, get_job)


def get_job(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ö—É—Ä—Å –ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∫–µ", callback_data='analytics')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton("–ö—É—Ä—Å Java - –∞–∑—Ä–∞–±–æ—Ç–∫–∏", callback_data='java')
    btn3 = types.InlineKeyboardButton("–ö—É—Ä—Å frontend - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", callback_data='front')
    markup.row(btn2, btn3)
    bot.reply_to(message,
                 "üåü –ê —Ç–µ–ø–µ—Ä—å —Å–∞–º–æ–µ —Å–ª–æ–∂–Ω–æ–µ, –∫–∞–∫–æ–π –∫—É—Ä—Å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω? ü§îüíª\n üëâ –ì–æ—Ç–æ–≤ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–π "
                 "–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Ä–∞—Å–∫—Ä—ã—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –±–∏–∑–Ω–µ—Å–∞? –í—ã–±–∏—Ä–∞–π –∫—É—Ä—Å –ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–µ!\nüëâ –ú–µ—á—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å "
                 "–ø—Ä–æ—Ñ–∏ –≤  Java –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å –ø–æ "
                 "Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n üëâ –ò–ª–∏ –∂–µ –≤–∞–º –ø–æ –¥—É—à–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤—ã—Ö –∏ —É–¥–æ–±–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö "
                 "–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤? –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! \n –í—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏!  üí™üí°‚ú®",
                 reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: analytics)
def callback_query(callback):
    callback.data = 'analytics'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏!\n –ù–∞ –Ω–∞—à–µ–º –∫—É—Ä—Å–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ –Ω–µ "
                     "—Ç–æ–ª—å–∫–æ –ø—Ä–æ –º–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º –∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏ "
                     "–≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–æ –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ—Ç–µ –Ω–∞–≤—ã–∫–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å "
                     "–±–∏–∑–Ω–µ—Å-–∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –ü–û –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏.\n –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ "
                     "–Ω–∞–º –∏ —Å—Ç–∞–Ω—å—Ç–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏!\n –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ "
                     "–Ω–∞ –∫—É—Ä—Å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ‚Äú–î–∞–ª–µ–µ‚Äù")
    bot.register_next_step_handler(message, get_register)


@bot.callback_query_handler(func=lambda callback: java)
def callback_query(callback):
    callback.data = 'java'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! üñ•Ô∏è \n–ì–æ—Ç–æ–≤ –æ—Å–≤–æ–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö "
                     "–ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç—å –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –≤ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏? \n "
                     "–ù–∞ –Ω–∞—à–µ–º –∫—É—Ä—Å–µ –ø–æ Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ –≤—Å–µ –æ—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö "
                     "—Ç–µ—Ö–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ—â–Ω—ã–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. \n "
                     "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤! üåüüë®‚Äç \n \n –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∫—É—Ä—Å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "
                     "‚Äú–î–∞–ª–µ–µ‚Äù")
    bot.register_next_step_handler(message, get_register)


@bot.callback_query_handler(func=lambda callback: front)
def callback_query(callback):
    callback.data = 'front'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! \n –° –Ω–∞—à–∏–º –∫—É—Ä—Å–æ–º –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å "
                     "—Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã. –ú—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ "
                     "—Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –Ω–æ —É–∑–Ω–∞–µ—Ç–µ –∏ –ø—Ä–æ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, "
                     "–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ! \n –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ "
                     "–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞—Å—Ç—å –∫ –¥–∏–∑–∞–π–Ω—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ! \n \n "
                     "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∫—É—Ä—Å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ‚Äú–î–∞–ª–µ–µ‚Äù")
    bot.register_next_step_handler(message, get_register)


def get_register(message):
        markup = types.InlineKeyboardMarkup()
        btn4 = types.InlineKeyboardButton("–î–∞–ª–µ–µ")
        bot.send_message(message,  "–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –ø–æ –¥–∞–Ω–Ω–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ?")
        if message.text.lower() in ("–¥–∞", "yes", "–Ω–µ–º–Ω–æ–≥–æ"): bot.send_message(message.chat.id,
                         "–¢–æ–≥–¥–∞ —Ä–µ—à–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 20% –Ω–∞ –≤—Å–µ –æ–±—É—á–µ–Ω–∏–µ. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ "
                         "(–≥—É–≥–ª-–¥–æ–∫)",

        create_user(message.chat.id))
        else: bot.send_message(message.chat.id,
                         "–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è! –î–∞—Ä–∏–º —Ç–µ–±–µ —Å–∫–∏–¥–∫—É 15% –Ω–∞ –≤—Å–µ –æ–±—É—á–µ–Ω–∏–µ + 2 –≤—Å—Ç—Ä–µ—á–∏ —Å –≤–µ–¥—É—â–∏–º–∏ "
                         "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –∫—É—Ä—Å–æ–≤!")


    ##bot.send_message(message.chat.id, ai_text if ai_text else "–ü–æ–≥–Ω–∞–ª–∏!")


def little_ai_for_work(project_id="small-talk-pwvh", session_id="test", message="", language_code="ru_RU"):
    session_client = dialogflow.SessionsClient()

    session = session_client.session_path(project_id, session_id)

    text_input = dialogflow.TextInput(text=message, language_code=language_code)

    query_input = dialogflow.QueryInput(text=text_input)

    response = session_client.detect_intent(
        request={"session": session, "query_input": query_input}
    )
    return response.query_result.fulfillment_text


create_data_base()
bot.polling(none_stop=True)
