import os
import sqlite3

from telebot import types, TeleBot
from google.cloud import dialogflow

os.environ[
    "GOOGLE_APPLICATION_CREDENTIALS"] = r'C:\Users\dasha\PycharmProjects\diploma\small-talk-pwvh-41523ba9f162.json'

bot = TeleBot("7036415516:AAGxHelplPpo5SZB0N3dWMjg1YO366-UYJg")

users = {}


def connect_from_database(query):
    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()
    cur.execute(query)
    conn.commit()
    cur.close()
    conn.close()


def create_data_base():
    """–°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""

    # TODO: –î–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–¥–µ–ª—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

    connect_from_database("CREATE TABLE IF NOT EXISTS users ("
                          "id INTEGER PRIMARY KEY AUTOINCREMENT, "
                          "chat_id VARCHAR(256),"
                          "name VARCHAR(256),"
                          "surname VARCHAR(256),"
                          "job VARCHAR(256)"
                          ");")


def create_user(chat_id):
    connect_from_database(f"INSERT INTO users (chat_id, name, surname, job) "
                          f"VALUES ({chat_id}, "
                          f"'{users[chat_id]['name']}', "
                          f"'{users[chat_id]['surname']}', "
                          f"'{users[chat_id]['job']}');")


def get_markup_from_button():
    """–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ—á–µ–∫"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn_registration = types.KeyboardButton("–î–∞–ª–µ–µ‚¨áÔ∏è")
    btn_lend = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ")
    markup.add(btn_registration, btn_lend)
    return markup


@bot.message_handler(commands=['start', 'help'])
def handle_start(message):
    bot.send_message(message.chat.id,
                     "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! Code Brain - —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ "
                     "—Ç–µ—Ö, –∫—Ç–æ —Ä–µ—à–∏–ª –≤–ø–µ—Ä–≤—ã–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã IT ü§Ø ".
                     format(message.from_user), reply_markup=get_markup_from_button())


@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == "–î–∞–ª–µ–µ‚¨áÔ∏è":
        choice(message)
    else:
        ai_text = little_ai_for_work(message=message.text)
        bot.send_message(message.chat.id, ai_text if ai_text else "–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è, –Ω–∞–ø–∏—à–∏ /help")


def choice(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–°–∏—Å—Ç–µ–º–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data='analytics')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton("Java - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", callback_data='java')
    btn3 = types.InlineKeyboardButton("Frontend - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", callback_data='front')
    markup.row(btn2, btn3)
    bot.reply_to(message,
                 "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—É—á–µ–Ω–∏–µ –ø–æ —Ç—Ä–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: \n üîπ –°–∏—Å—Ç–µ–º–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ \n üîπ Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è "
                 "–Ω–∞—á–∏–Ω–∞—é—â–∏—Ö \n üîπ –û—Å–Ω–æ–≤—ã Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ \n –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?üî•",
                 reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: analytics)
def callback_query(callback):
    callback.data = 'analytics'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏!üìö \n –ù–∞ –Ω–∞—à–µ–º –∫—É—Ä—Å–µ –≤—ã –Ω–µ —Ç–æ–ª—å–∫–æ "
                     "–ø—Ä–æ–π–¥–µ—Ç–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫—É—é –±–∞–∑—É, —É–∑–Ω–∞–µ—Ç–µ  –ø—Ä–æ –º–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ, "
                     "–Ω–æ —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ—Ç–µ—Å—å –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–º–µ–ª–æ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –≤ —Å–≤–æ–µ–º "
                     "–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ üòé  \n üîπ –°—Ç–∞—Ä—Ç –∫—É—Ä—Å–∞: 10 –∏—é–ª—è 2024 –≥–æ–¥–∞ \n üîπ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2.5 –º–µ—Å—è—Ü–∞ \n –§–æ—Ä–º–∞—Ç "
                     "–∑–∞–Ω—è—Ç–∏–π: –æ–Ω–ª–∞–π–Ω \n üîπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 20 \n üîπ –ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è:  –Ω–æ—É—Ç–±—É–∫/ –∫–æ–º–ø—å—Ç–µ—Ä \n üîπ"
                     "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: 7.999! üî•")
    markup = types.InlineKeyboardMarkup()
    btn4 = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data='buy')
    btn5 = types.InlineKeyboardButton("", callback_data='programm1')
    markup.row(btn4, btn5)
    callback.message.edit_reply_markup(btn4, btn5)


@bot.callback_query_handler(func=lambda callback: java)
def callback_query(callback):
    callback.data = 'java'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ç–∞–π–Ω –∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ Java-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! üëÄ \n –≠—Ç–æ –∫—É—Ä—Å –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –¥–∞–≤–Ω–æ "
                     "–º–µ—á—Ç–∞–ª –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ —Ä–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞! –° –Ω–∞–º–∏ –≤—ã —É–∑–Ω–∞–µ—Ç–µ –≤—Å–µ –æ—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π –¥–æ "
                     "–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ç–µ—Ö–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ—â–Ω—ã–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ "
                     "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.üîπ \n –°—Ç–∞—Ä—Ç –∫—É—Ä—Å–∞: 10 –∏—é–ª—è 2024 –≥–æ–¥–∞ üîπ\n –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2.5 –º–µ—Å—è—Ü–∞ üîπ\n –§–æ—Ä–º–∞—Ç "
                     "–∑–∞–Ω—è—Ç–∏–π: –æ–Ω–ª–∞–π–Ω üîπ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 20 üîπ\n –ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è: –Ω–æ—É—Ç–±—É–∫/ –∫–æ–º–ø—å—Ç–µ—Ä üîπ\n "
                     "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: 8.999! üî•")
    markup = types.InlineKeyboardMarkup()
    btn4 = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data='buy')
    btn5 = types.InlineKeyboardButton("", callback_data='programm2')
    markup.row(btn4, btn5)
    callback.message.edit_reply_markup(btn4, btn5)


@bot.callback_query_handler(func=lambda callback: front)
def callback_query(callback):
    callback.data = 'front'
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! ‚òÄÔ∏è \n –° –Ω–∞—à–∏–º –∫—É—Ä—Å–æ–º –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å "
                     "–∫—Ä–∞—Å–∏–≤—ã–µ, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã! –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ "
                     "–∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –Ω–æ —É–∑–Ω–∞–µ—Ç–µ –∏ –ø—Ä–æ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º "
                     "—Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ!üîπ \n –°—Ç–∞—Ä—Ç –∫—É—Ä—Å–∞: 10 –∏—é–ª—è 2024 –≥–æ–¥–∞ üîπ\n "
                     "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2.5 –º–µ—Å—è—Ü–∞ üîπ\n –§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏–π: –æ–Ω–ª–∞–π–Ω üîπ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 20 üîπ\n –ß—Ç–æ "
                     "–Ω—É–∂–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è: –Ω–æ—É—Ç–±—É–∫/ –∫–æ–º–ø—å—Ç–µ—Ä üîπ\n –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: 8.999! üî•")
    markup = types.InlineKeyboardMarkup()
    btn4 = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data='buy')
    btn5 = types.InlineKeyboardButton("", callback_data='programm3')
    markup.row(btn4, btn5)
    callback.message.edit_reply_markup(btn4, btn5)


@bot.callback_query_handler(func=lambda callback: program1)
def callback_query(callback):
    callback.data = 'program1'
    bot.send_message(message.chat.id,
                     "üìå–ü—Ä–æ—Ñ–µ—Å—Å–∏—è ‚Äú–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫‚Äù –í–≤–µ–¥–µ–Ω–∏–µ. –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û.–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –ü–û. –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ "
                     "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ \n üìå–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π \n –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è. –ë–∏–∑–Ω–µ—Å-—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è \n –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ "
                     "–±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ \n –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è \n –ù–µ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è "
                     "\n üìå–ê—Ä—Ö—Ç–∏–∫–µ–∫—Ç—É—Ä–∞ \n API \n –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è \n –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö, ER-–¥–∏–∞–≥—Ä–∞–º–º–∞ \n  –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö \n  "
                     "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –º–æ–Ω–æ–ª–∏—Ç–æ–≤ \n  –û—á–µ—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π \n –î–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ \n "
                     "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI \n –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–¥–∞—á –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ \n –í–æ–ø—Ä–æ—Å—ã —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ "
                     "–ø–æ–∑–∏—Ü–∏—é —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ")


@bot.callback_query_handler(func=lambda callback: program2)
def callback_query(callback):
    callback.data = 'program2'
    bot.send_message(message.chat.id,
                     "üìåJava Core 1. –í–≤–æ–¥–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ. –û–±–∑–æ—Ä –∫—É—Ä—Å–∞. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. "
                     "Maven/Gradle. –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ""Hello world"". \n 2. –ü—Ä–æ—Å—Ç—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∏–º–∏. "
                     "–£—Å–ª–æ–≤–∏—è, —Ü–∏–∫–ª—ã, switch/case. –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏. \n 3. –í–≤–µ–¥–µ–Ω–∏–µ –≤ –û–û–ü. –ö–ª–∞—Å—Å—ã, –æ–±—ä–µ–∫—Ç—ã, "
                     "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è, –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞. –§—É–Ω–∫—Ü–∏–∏. –†–µ–∫—É—Ä—Å–∏—è. –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ "
                     "–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.\n 4. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –û–û–ü. –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è.  \n 5. "
                     "–û–±–æ–±—â–µ–Ω–∏—è. –ö–æ–ª–ª–µ–∫—Ü–∏–∏: List, –ú–∞—Ä, Set. –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–ª–µ–∫—Ü—ñ–π. –ö–ª–∞—Å—Å—ã String, Integer, "
                     "Long, Double. \n 6. –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞–º–∏. –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ "
                     "–ø–æ—Ç–æ–∫–∞–º–∏. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ç–æ–∫–æ–≤. Happens Before. \n 7. –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å. ExecutorService. Future –∏"
                     "CompletableFuture. ThreadLocal –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. Atomic \n 8. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ë–î. "
                     "JDBC.  \n üìå –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞. Spring. –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö  \n 1. –í–≤–µ–¥–µ–Ω–∏–µ Spring. Bean. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è "
                     "–±–∏–Ω–æ–≤."
                     "–ö–æ–Ω—Ç–µ–∫—Å—Ç Spring.  \n 2. Spring Boot. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞. \n3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è. –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. "
                     "@Qualifier, @Autoiwired  \n 4. –°–µ—Ä–≤–ª–µ—Ç—ã. Spring MVC. –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã. –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –±–∏–Ω–æ–≤.  \n 5. "
                     "–î–æ—Å—Ç—É–ø –∫"
                     "–¥–∞–Ω–Ω—ã–º. JPA. –ü–æ–Ω—è—Ç–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏, –æ–±—ä–µ–∫—Ç–Ω–æ-—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –°–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏. \n 6. "
                     "–ú–µ–Ω–µ–¥–∂–µ—Ä —Å—É—â–Ω–æ—Å—Ç–µ–π. Hibernate. –°–µ—Ä–≤–∏—Å-—Å–ª–æ–π.  \n 7. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –£—Ä–æ–≤–Ω—ñ –∏–∑–æ–ª—è—Ü–∏–π.  \n 8. Spring "
                     "REST."
                     "CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏. –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏. ExceptionHandler'—ã. Entity Graph.  \n 9. Spring Security. "
                     "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è."
                     "–î–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å–∞–º. FilterChain.  \n 10. –ê—Å–ø–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. Spring AOP.  "
                     "\n 11."
                     "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö. SQL. Join –∑–∞–ø—Ä–æ—Å—ã. –ò–Ω–¥–µ–∫—Å—ã.")


@bot.callback_query_handler(func=lambda callback: program3)
def callback_query(callback):
    callback.data = 'program3'
    bot.send_message(message.chat.id,
                     "üìå–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞ \n 1.WEB - —á—Ç–æ, –∑–∞—á–µ–º –∏ –∫–∞–∫ \n 2. TypeScript \n 3. –û–±–∑–æ—Ä —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ –∏ "
                     "—Ç—Ä–µ–Ω–¥–æ–≤ \n 4. React - –Ω–µ –ø–µ—Ä–≤—ã–π, –Ω–æ –ø–µ—Ä–≤—ã–π \n 5. –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞—Ö \n 6. "
                     "–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è, –ø—Ä–µ- –∏ –ø–æ—Å—Ç-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã, css —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ \n 7. –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ \n 8. "
                     "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ \n 9. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ")


def little_ai_for_work(project_id="small-talk-pwvh", session_id="test", message="", language_code="ru_RU"):
    session_client = dialogflow.SessionsClient()

    session = session_client.session_path(project_id, session_id)

    text_input = dialogflow.TextInput(text=message, language_code=language_code)

    query_input = dialogflow.QueryInput(text=text_input)

    response = session_client.detect_intent(
        request={"session": session, "query_input": query_input}
    )
    return response.query_result.fulfillment_text


create_data_base()
bot.polling(none_stop=True)
