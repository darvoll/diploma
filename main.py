import telebot
from telebot import types
import sqlite3 

Token = '7036415516:AAGxHelplPpo5SZB0N3dWMjg1YO366-UYJg'
bot = telebot.TeleBot(Token)
name = ""
surname = ""
job = ""

# –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç /start


@bot.message_handler(commands=['start', 'help'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ üìä \n –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è".
                     format(message.from_user), reply_markup=markup)
    conn = sqlite3.connect('code.brain.sql')
    cur = conn.cursor()


    cur.execute('CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key, name varchar(70), pass varchar('
                '70)')
    conn.commit()
    cur.close()
    conn.close

    bot.register_message_handler(message, register)
@bot.message_handler(content_types=['text'])
def register(message):
    if message.text == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.from_user.id, "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è,\n –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(message, get_name)


def get_name(message):
    global name
    name = message.text
    if message.text != "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.from_user.id, "–î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ," + name + "\n""–¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è?")
        bot.register_next_step_handler(message, get_surname)
    else:
        bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è, –Ω–∞–ø–∏—à–∏ /help")



def get_surname(message):
    global surname
    surname = message.text
    bot.send_message(message.from_user.id, "–ì–¥–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å/—É—á–∏—à—å—Å—è?)")
    bot.register_next_step_handler(message, get_job)


def get_job(message):
    global job
    job = message.text
    bot.send_message(message.from_user.id,
                     "–¢–æ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º—É –∫—É—Ä—Å—É –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—å–µ—Ä—É –∏ –∂–∏–∑–Ω—å!üòä\n –û—Å–≤–æ–π—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–∞–º—ã—Ö –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –≤ IT –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ–ø—ã—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö \n –°—Ç–∞—Ä—Ç –∫—É—Ä—Å–∞: 25 –º–∞—Ä—Ç–∞ 2024 –≥–æ–¥–∞ \n –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2,5 –º–µ—Å—è—Ü–∞ + –∑–∞—â–∏—Ç–∞ \n –°—Ç–æ–∏–º–æ—Å—Ç—å: 4500—Ä—É–±" " \n –ì–æ—Ç–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è?")
    bot.register_next_step_handler(message, website)


def website(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("Code Brain", url='https://job.promo-z.ru/analytic')
    markup.row (btn1)
    btn2 = types.InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data='test')
    btn3 = types.InlineKeyboardButton("–ü–æ–æ–±—â–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data='cal')
    markup.row (btn2, btn3)
    bot.send_message(message.chat.id,
                     "–°–∫–æ—Ä–µ–µ, {0.first_name}! –û—Å—Ç–∞–ª–æ—Å—å 10 —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç!)".
                     format(message.from_user), reply_markup=markup)


def get_course(message):
    global course
    course = message.text
    bot.send_message(message.from_user.id, "")
    bot.register_next_step_handler(message)

##@bot.callback_query_handler(func=lambda callback: True)
##def callback_message(callback):
  ##  if callback.data == "delete":
##bot.polling(none_stop=True, interval=0)
